This patch contains all the Debian-specific
changes mixed together. 
--- /dev/null
+++ sdr-shell-4.25~svn157/INSTALL
@@ -0,0 +1,117 @@
+Installation Instructions for sdr-shell-v4 branch.
+
+Distribution Specific Instructions
+
+Fedora 14
+
+(1) Install prerequisite packages with:
+
+	if fedora was installed from the live cd:
+	sudo yum install subversion autoconf gcc gcc-c++
+
+	sudo yum install libtool qt-devel liblo-devel hamlib-devel
+	sudo yum install jack-audio-connection-kit-devel 
+	sudo yum install jack-audio-connection-kit-example-clients
+	sudo yum install qjackctl alsa-util
+
+	depenencies for dttsp:
+		sudo yum install fftw-devel gsl-devel
+
+	dependencies for usbsoftrock:
+		sudo yum install libusb1-devel ncurses-devel
+
+(2) Run 'qmake-qt4' to build the Makefile, then 'make' to build sdr-shell.
+
+(3) Add yourself to the audio and jackusers groups in /etc/group.
+
+(4) Configure udev to set usbsoftrock permissions (see below)
+
+Ubuntu 10.10 / Debian squeeze
+
+(1) From a live CD installation of Ubuntu, Xubuntu or lubuntu, install
+
+   Packages needed to build dttsp:
+	sudo apt-get install automake build-essential subversion 
+	sudo apt-get install libfftw3-dev jackd2 libjack-jackd2-dev
+	sudo apt-get install liblo-dev libgsl0-dev
+
+	When installing jack, answer 'yes' to the question about setting up
+	real-time priorities.
+
+   Packages needed to build usbsoftrock:
+	sudo apt-get install libusb++-dev libncurses5-dev
+
+   Packages needed to build sdr-shell:
+	sudo apt-get install qt4-qmake libqt4-dev libhamlib++-dev pkg-config 
+
+(2) Run 'qmake-qt4' to build the Makefile, then 'make' to build sdr-shell.
+
+(3) Add yourself to the audio and video groups in /etc/group.
+
+	sudo usermod -G audio -a <user>
+	sudo usermod -G video -a <user>
+
+(4) If you did not answer 'yes' to the jack installation question about
+real-time priorities, you may reconfigure it for real-time priorities with:
+
+	sudo dpkg-reconfigure -p high jackd
+
+(5) Configure udev to set usbsoftrock permissions (see below)
+
+(6) Build this package: 
+update-alternatives --set qmake   /usr/bin/qmake-qt4  
+
+All Linux Systems
+
+The following udev rules works well to allow the group softrock to use
+usbsoftrock without root privileges. You can put it in /etc/udev/rules.d
+and call it softrock.rules.
+
+Fedora 9:
+	BUS=="usb", ACTION=="add", SSSYSFS{idVendor}=="16c0", SYSFS{idProduct}=="05dc",
+	MODE="660", GROUP="softrock"
+
+Fedora 12+, openSUSE 11+, Ubuntu 9.10+ needs 
+	SUBSYSTEM=="usb", ACTION=="add", ATTR{idVendor}=="16c0",
+	ATTR{idProduct}=="05dc", MODE="0660", GROUP="admin", SYMLINK="softrock"
+
+the group "softrock" must exist in /etc/group, or substitute another group
+name.
+
+Use jack_metro, a metronome, to figure out which ports are your speakers, etc.
+
+
+Building for OSX 10.6 * not updated for qt4 *
+
+sdr-shell-v4 on OSX doesn't preserve the background of the spectrogram frame.
+
+When setting up to build for OSX, I wanted to use the fink and macports tools
+to get the prerequisite packages.  I had very limited success in getting usable
+prerequisites.  Both fink and macports build their packages in 32-bit (x86)
+mode, while the compiler default on 10.6 is now 64 bit (x86_64) mode.  In order
+to build against its packages requires setting:
+
+	PATH=/sw/var/lib/fink/path-prefix-10.6:$PATH
+
+Note that qt3mac from both package systems does not build on OSX 10.6 (it did
+build on 10.5) and there doesn't appear to be anyone working on it.  Instead, I
+selected 'qt3', which uses x11.
+
+In all, I believe these packages were for building dttsp and sdr-shell:
+  fink:
+	qt3
+  mac ports:
+ 	fftw-3 @3.2.2_0+i386 (active)
+	fftw-3-single @3.2.2_0+i386 (active)
+	gsl @1.13_1+darwin_i386 (active)
+
+The more packages were built from source using the instructions in:
+
+  http://groups.yahoo.com/group/dttsp-linux/files/build-dttsp.sh 
+
+I also had to build hamlib-1.2.9 (I recall having to do something ugly to
+hamlib to get it to compile -- it probably doesn't work).
+
+Get the JACK Audio Connection Kit from from jackosx.com.  I've never
+gotten the JACK in fink or macports to work.
+
--- /dev/null
+++ sdr-shell-4.25~svn157/COPYING
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.
--- /dev/null
+++ sdr-shell-4.25~svn157/CHANGELOG
@@ -0,0 +1,382 @@
+
+Version 4.25
+
+1. The NR, ANF and NB values were not being read from the config file.  The
+code that reads those from the saved configuration were deleted in svn #136.
+Restored.
+
+2. To deal with the usbsoftrock offset setup, I moved some code around.  I'm
+a bit uncertain if I'm breaking something here, but it runs okay.  I moved
+the getenv of SDR_DEFRATE into the main_widget constructor, and set the
+tuneCenter there.  I would also move getting SDR_HOST there, also, but I'm
+not too certain of what I would be getting into with that.
+
+3. Moved the setting of cfgTransmit->setChecked to after where all the
+command ports will be set up.
+
+4. Fixed the hScale related compile errors.
+
+5. I fixed the spectrogram area mouse scroll wheel tuning to be consistant
+with the way tuning in the spectrum and frequency display widgets.  It was
+backwards from the way the other windows operated.  Does anyone else use mouse
+wheel tuning?  I've been thinking of gutting a mouse to make a "big knob" out
+of the mouse wheel.
+
+6. Set maximum values for the NR LeakageSpinBox and NR_GainSpinBox to values
+that will keep dttsp from going mute and not coming out of it.
+
+7. Set the value and step of the ANF_Leakage to the dttsp default, which
+requires more digits (and tweeking of the GUI widget widths).
+
+
+Version 4.24
+
+Added command line options.
+
+Version 4.23
+
+Add revised PTT polling, by Alex Lee 9V1AL.
+
+To turn this on, edit
+sdr-shell.pro and remove the # (comment) character on the line that says:
+
+	DEFINES += PTT_POLL
+
+
+   Every 100ms or so, sdr-shell will check
+   the PTT state by sending a UDP message to the usbsoftrock daemon.  The message is a 
+   "get ptt".  You will need a patched version of usbsoftrock to enable "get ptt" to work.
+
+   With PTT polling, when an external
+   program, such the keyboard keyer, iambic keyer, or fldigi. to change the PTT state to Rx
+   or Tx, and sdr-shell will change state accordingly.  The 'center' frequency for Tx and the filter
+   limits may also be changed for CW Tx and flidigi Tx to ensure that the Rx dial freq is the same
+   (or very close to) the actual Tx RF out.
+
+Add FREQ polling, by Alex Lee 9V1AL.
+
+To turn this on, edit
+sdr-shell.pro and remove the # (comment) character on the line that says:
+
+	DEFINES += FREQ_POLL
+
+
+   Every 500ms or so, sdr-shell will check
+   the current "center" frequency of the softrock Si570 (which is usually Si570 freq / 4),
+   and updates the Rx frequency (and display) of sdr-shell accordingly.  This allows external
+   changes of the frequency, eg. by a rotary encoder attached to the Softrock/Mobo, to be
+   reflected automatically in sdr-shell.  There is no need to use a patched version of usbsoftrock,
+   as the "get freq" command is already available.
+
+
+Version 4.22
+
+Break out functions for turning TX on and off from toggle_TX(). 
+
+Turn TX off at start-up.  This mutes the transmit dttsp process, which 
+otherwise sends audio to the softrock which is in turn picked up as noise
+by the receive dttsp process.
+
+Fix up arguments to some of the commands.  Several formats had two %d
+strings but only one argument.
+
+Fix setTxIQGain and setTxIQPhase.  They were setting the receive IQ values.
+
+
+Version 4.21
+
+Add PTT polling code by Alex, 9V1AL.
+
+The PTT polling keeps sdr-shell up-to-date with other program that may
+be setting PTT on the USB Synthesizer.  Sdr-shell sets state for dttsp
+when it sees the PTT line change state.
+
+Reading the PTT state is only available in usbsoftrock for the MOBO.
+If used with usbsoftrock-1.0.1 this will not work due to a bug in
+usbsoftrock.  To make this compatible with all softrock boards, the setting
+of the PTT polling timer is done inside ofan #ifdef.  To turn this on, edit
+sdr-shell.pro and remove the # (comment) character on the line that says:
+
+	DEFINES += PTT_POLL
+
+
+Version 4.20
+
+Note: this change adds files and modified sdr-shell.pro.  You must rebuild
+your makefile with 'qmake-qt4'.
+
+This adds buttons to send arbitrary commands to DttSP.  There are eight "commands"
+buttons that are new in the window-bottom control frame.  Look in the DttSP Commands
+section of the README for details.
+
+Version 4.19
+
+Note: this change adds files and modified sdr-shell.pro.  You must rebuild
+your makefile with 'qmake-qt4'.
+
+ - Change the default frequency for bands and memories to 10mhz.
+
+ - change the mouse wheel to tune by 'tuneStep', which is the tuning step
+   selected by the up/down arrow keys for the tuning granularity of the
+   left/right arrow keys.
+
+   When tuning 1khz or less, the the dttsp oscillator is tuned until it hits
+   a size of the spectrum, at which time the oscillator is set to it's default
+   and usbsoftrock is called to retune the external oscillator.
+
+ - the mouse wheel tunes in the frequency display.  Position the pointer
+   over the digit to be tuned, and scroll the mouse wheel up or down to tune
+   at that step size.
+
+ - clicking on a digit in the frequency display sets the tuneStep size.  This
+   will be used by both the mouse wheel in the spectrum/spectogram frames as
+   well as the arrow keys.
+
+ - reversed the h and l keys.  Now the tune step moves left (higher) on h and
+   right (lower) on l.  I feel that this behaves more like vi, as the motion of
+   the step goes left with h and right with l.
+
+Version 4.18
+
+Fixes from Al, nh7o:
+
+ - setFilter_l() was not multiplying by step size
+
+ - the [ and ] keys did not move the filter when on LSB/CWL because of a range
+   check.  Removed the range check.
+
+Version 4.17
+
+Version number is now a number in main_widget.h
+
+- Turn on the 'filterLine' flag to put bandpass filter lines in the spectrogram
+  display.  This should be a config option.
+
+A Spectrum Display box on the Spectrum configuration tab that includes:
+-  Fill spectrum line.
+-  Spectrum Averaging
+  The spectrum display gets averaged of the past (n) values.  This makes it
+  smoother, possibly at the cost of lost detail.  Try 
+- Spectrum Scale
+  This is a start at being able to set the db scale of the spectrum display.
+  Right now the values are used only for setting a scale value against which to
+  plot the spectrum line.  I don't know how to calibrate the spectrum data from
+  dttsp to a dB scale.  When the scale is not 1.0, the db values and
+  spectrogram window are wrong.
+
+Version 4.16
+
+- Separate HELP window from Configuration (the config window still has help in it)
+
+- Incorporate user settable NR values for dttsp by Glenn VE9GJ
+
+- Make a separate configuration window for setting NR, NB and ANF values.  Bring it up by clicking the
+left mouse button (for right handed mice) on one of the NR NB or ANF widgets.
+
+- Make a widget for setting the zoom level, along the bottom of the window.
+
+- Change some menu bar colors around so it looks better.
+
+
+Version rxrx-14
+
+- Remove the fixed -sample-rate/4 tuning offset used when tuning with usbsoftrock.
+  The offset is now configurable (but not persistant across restart)
+
+- UDP command connections (for sdr-shell and usbsoftrock) can now go
+  to another computer, or from a virtual machine to the host.  Spectrum and
+  meter data must be sent back to the local host by some other means.
+  I attempted to do this with netcat, but was unsuccessful.  I ended up
+  writing a simple tunnel of my own (it's in the tools directory)
+
+To use:
+
+host:
+./tunnel1 19003 17003
+./tunnel1 19002 17002 
+ 
+remote:
+./tunnel2 otherside 17002 19002
+./tunnel2 otherside 17003 19003
+
+I put the name otherside in /etc/hosts.  This is the host side of the virtualbox
+
+- kubuntu spectrogram drawing.  I don't know why this was different on kubuntu,
+  but I changed the main widget's attributes from:
+
+    setAttribute( Qt::WA_OpaquePaintEvent, true);
+
+  to	
+
+    setAttribute( Qt::WA_NoSystemBackground, true);
+
+and it updates correctly.  It also updates correctly on Fedora9 and Ubuntu 10,
+but not on OSX with qt4-mac.  I could argue that the WA_OpaquePaintEvent
+attribute was wrong, since sdr-shell does NOT redraw the entire spectrogram
+on every update.
+
+				QT Version
+Kubuntu:			4:4.6.2-0ubuntu5
+Ubuntu 10.04.1 LTS:		4:4.6.2-0ubuntu5.1
+Fedora 9:			4.5.2
+OSX:				4.5.2-2 (qt4-mac)
+Fedora 13:			qt-x11-4.6.3-8.fc13.i686 
+
+
+Version rxtx-13
+
+The goal for this version is to restore the sdr-for-if v2d behavior.
+v2d has no ability to to tune the usbsoftrock (that feature was in v2e)
+so the arrow keys, mouse dragging in the spectrogram and clicking in
+the spectrum window all tune within the bandwidth of the sound card.
+
+This functionality is configured by turning off the "USBSoftrock"
+configuration setting (CFG -> General).
+
+Testing
+
+Set the SoftRock to a frequeny, then tune.
+
+Frequencies:
+	./usbsoftrock -vvv -a set freq 3.5815
+	(W1AW CW bulletins and morse code practice)
+
+	Open CFG window
+		Click off Use usbsoftrock via UDP
+		set LO Frequency to 3581500 (click Update)
+
+Tuning Operations
+	1. arrow keys (left, right).
+	   tune from one end of the sound card spectrom to the other
+	2. change the arrow key steps (up & down arrows), 
+	   use the left & right arrow keys to tune
+	3. click-and-drag in the spectrogram (buttons 1, 2, 3)
+	4. click in the spectrum.
+	   Click from one end to the other.
+	   Click on a signal to tune to it.
+
+With usbsoftrock -vvv set, make sure it does not get changed.
+Use usbsoftrock getfreq at the end to make sure it has not been changed.
+
+Version rxtx-12
+
+Revert all the changes to setRxFrequency made in rxtx-11.  This almost certainly
+breaks tuning when not using IF mode and not using USBSoftrock.
+
+Filter stuff:
+echo 'getSpectrumInfo' | nc -v -u localhost 19001
+
+CFG/General/Calibration:
+	Spectrum: 70  S-Meter: 40
+
+
+Version rxtx-11
+
+- fixed the IF mode that won't turn off.  This looks like some QT4 interactions
+that I don't understand.  I put the IF on/off button inside of a box inside the
+frame and now it works.
+
+- initialize cfg menus to saved values.  This affected the Spectrum type
+
+- fixed a bunch of spectrum type settings bugs.  FWIW there are other spectrum
+types that are not supported.
+
+- fixed the General / USBSoftrock Control settings so they are independent
+
+- save the 5/4 tuning (for 6m/2m converter) setting
+
+- vfo display no longer goes black when window loses focus
+
+- there is still a bug in the IF code where the frequency gets really messed up
+on startup.
+
+- I removed the RX and TX phase calibration.  I've seen many comments on this
+list saying that it doesn't really work anymore since that is automatic.
+
+- there was something buggy in the RX/TX and TX/RX switching.  I'm not sure of
+the details but the click button (click on RX widget) and T key now call the
+same function.  So, if they're broken they're at least broken in the same way.
+
+- there have been some improvements on tuning with the arrow keys when not using
+usbsoftrock for tuning ("rock bound" - the old crystal softrocks).  I'm sure that
+there are some bugs in this area.
+
+Version rxtx-5
+
+ - Several fixes to the "zoom out" display, and I now believe it is working
+   correctly.
+
+   One thing that can cause the spectrum and spectogram displays to look
+   odd is an artifact of how sdr-shell puts together the spectrum buffer.
+   The spectrum is centered on the oscillator frequency, which makes
+   displaying it simple.  However, if the Osc is set to 12000 hz above
+   zero (where tuning using an Si580 with a 48khz sound card) there is
+   only 1200hz of valid data above the center frequency.  Above that,
+   dttsp repeats the data, backwards.  The result is a display where
+   there appears to be a "mirror" on the right side of the window.
+
+   In this version, I draw a green line at where the data ends.
+
+ - Tuning changes.  Scroll wheel tuning now works in the spectrum portion
+   of the window, as well as in the spectrogram portion.  Clicking to
+   tune in the spectrogram display still does not work well, because
+   the two clicks have to be in almost exactly the same spot.  This is
+   because of the click-and-drag tuning feature.
+
+ - For packaging, I created an INSTALL and CHANGELOG.  Build instructions have
+   moved from README to INSTALL.
+
+Version rxtx-4
+Bug Fixes:
+ - Change version string to "rxtx.#", where I intend to bump the # on checkins
+ - make band switching remember the whole frequeny, not just the rx_delta_f
+
+Organization:
+ - moved all the frequency setting code to setRxFrequeny, which now takes an
+   argument of whether or not it should set a USBSoftrock
+ - remove various bits of dead code
+
+New Features:
+ - mouse scroll wheel tunes (shift, ctl and alt increase the tuning steps)
+   - includes logitech mice with "3d" scrolling (wheel tilts left/right)
+
+ - hooks for external programs: band switch, mode switch
+   Set the environment variables SDR_MODE and SDR_BAND to a program that
+   will be run when the mode is changed, either manually or as part of
+   recalling a memory.
+
+   I use the mode switch hook to connect a keyer to the TX-dttsp input.
+   As an optimization, if the mode does not change, the program is not
+   called, nor is a mode change sent to dttsp.  To force a change, use
+   shift-click on any of the mode buttons.
+   This required adding an argument to the VariModelabel mouseRelease() call.
+
+ - arrow keys can tune 10mhz & 100mhz
+
+ - set the TX dttsp to MUTE on receive.  This reduced the receive noise I was
+   getting dramaticly; however, when I hooked up a speaker to the TX Output
+   port on my sound card, I found that the microphone input was being passed
+   through so it's not really quiet.
+
+ - RIT and SPLIT tuning.  Neither are persistant across band switches or
+   program restart.  RIT is reset when tuning with the arrow keys is done
+   (tune only by dragging the mouse in the spectrogram display)
+
+   SPLIT is not saved when the program exits (yet).
+
+ - Config menu IQ: for the TX dttsp, added a gain setting for mic input.
+
+ - 5/4 tuning (setting is not persistant across program exits), useful for
+   tuning of dual-conversion softrocks, e.g. 144mhz to 28mhz
+
+New Features that Don't Entirely Work:
+ - scaling of the display: zoom out 1x, 2x or 4x
+   The goal was to permits seeing more or all of the spectrum on the screen
+   at once.  I did this by reducing the size of the spectrum buffer from 4096
+   to 2048 or 1024 (1/2 and 1/4) and making adjustments in the display code.
+
+   It only partly works.  I think the spectrogram display is wrong (it wraps)
+   and it's clear the spectrum display is wrong.
+
+   Use 1, 2, and 4 keys to set zoom (1x, 1/2x, 1/4x).
+
--- /dev/null
+++ sdr-shell-4.25~svn157/AUTHORS
@@ -0,0 +1,3 @@
+SDR-Shell
+
+* Edson Pereira (pu1jte, n1vtn, jf1afn) <ewpereira@gmail.com>
--- sdr-shell-4.25~svn157.orig/main_widget.h
+++ sdr-shell-4.25~svn157/main_widget.h
@@ -31,6 +31,7 @@
 
 #include <time.h>
 #include <sys/timeb.h>
+#include <stdlib.h>
 
 #include "spectrogram.h"
 #include "spectrum.h"
--- /dev/null
+++ sdr-shell-4.25~svn157/README
@@ -0,0 +1,267 @@
+
+Getting started using SDR-Shell with the SoftRock RXTX 6.3
+
+sdr-shell is a graphical user interface for interfacing with the DttSP
+(sdr-core) software-defined radio (SDR).  It can use two sdr-core
+processes, one each for receive and transmit, and usbsoftrock for tuning
+the USB-controllable synthesizer on the SoftRock SDR.
+
+Getting a radio working with sdr-shell, dttsp, and utilities is a lot like
+building your own radio, but with less solder.  Instead of solder wick and
+a solder sucker, you have a reset button.
+
+For information about the SoftRock SDR, see:
+
+	http://www.kb9yig.com		The designer's site
+	http://www.wb5rvz.com/sdr	Build instructions
+	softrock40@yahoogroups.com	Soft Rock discussion group 
+					(Very active)
+	dttsp-linux@yahoogroups.com	the dttsp discussion group
+
+sdr-shell requires:
+  dttsp (two copies: one recieve one transmit)
+  usbsoftrock 1.0.1
+
+usbsoftrock is available from the softrock40 Yahoo Groups files area,
+under VK6JBL's directory (usbsoftrock-1.0.1.tar.gz).
+
+The best place to get dttsp source is:
+	https://www.cgran.org/cgran/projects/dttsp/branches/ab2kt/sdr-core
+
+Please see the file "INSTALL" for build instructions.
+
+Running on Linux
+
+The shell script 'start-delta44' will start jackd, usbsoftrock and sdr-shell.
+You will need to adjust the settings in that script for your si570 oscillator
+(usbsoftrock -x *value*), and your sound card's ports.
+
+
+to send commands to the dttsp command port, use:
+  nc -v -u localhost 19001
+
+Delta-44 card owners: Use 'envy24control' to set the card's hardware settings.
+Under Analog Volume, I set everything to maximum.
+ (Fedora: alsa-tools, Ubuntu: alsa-tools-gui)
+
+qjackctl is a graphical configuration/connection program for the JACK Audio
+Connection Kit.
+ (Fedora: qjackctl)
+
+
+Running on OSX
+
+I am running on a Macbook Pro (2009 vintage) with a Creative Audigy USB audio
+adapter.  It has 5+1 output and a Line/Mic input.  This adapter has given me
+some problems: it always requires power cycling following the mac going to
+sleep, but has been adequate for occasional use.  With four output channels
+and 2 input channels in 24-bit mode, I can only use it for 4800 kHz of spectrum.
+With usbsoftrock and the way sdr-shell displays spectrum this been adequate
+for me.
+
+1) increase the maximum UDP datagram size:
+	sudo sysctl -w net.inet.udp.maxdgram=32768
+
+2)   start the audio midi tool (Applications -> Utilities Audio MIDI Setup)
+   create an aggregate device consisting of:
+	audio output
+	I/Q output
+	I/Q input
+	audio input (I use the microphone)
+   set each to a 48khz input rate.
+
+   deselect the 'thru' selection of the external line connector input source
+ 
+
+3) start jackd using JackPilot.  I've never gotten jackd to start from
+   the command-line due to problems finding shared libraries.
+
+  Configuration:
+      Jack Server
+	Driver: coreaudio
+	Interface: Aggregate Device
+	Sample Rate: 4800
+	Buffer Size: 2048
+	Interface Output Channels: 4
+	Interface Input Channels: 4
+
+      Jack Router
+	Virtual Input Channels: 4
+	Virtual Output Channels: 4
+	Auto Connect with physical ports: 4
+
+If you find a way to start jack and midi tool from a shell script, please
+post your solution!
+
+4) start usbsoftrock, dttsp and sdr-shell:
+
+start-audigy.sh
+
+
+Use Notes
+
+     Clicking the 'rx' symbol switches from receive to transmit and changes the
+symbol to tx.  Clicking the 'tx' symbol turns transmit off.
+
+     The receive dttsp is muted during transmit.  I found it unnerving to talk
+while hearing myself echoed back with a 1/2 second delay.
+
+     Bands are memories (there are ten of them) that are automatically saved when
+a band change occurs.  Bands wrap from ten to one going up, and from one to ten
+when going down.
+
+	Tuning:
+
+	Tuning is done on two levels: within the bandwidth of the audio card,
+and by using a programmable oscillator.  For example, the recent SoftRock
+SDRs use an Si570 synthesized oscillator that can be configured over USB.
+This is enabled when the "Use usbsoftrock" option is selected (General
+Configuration tab), sdr-shell communicates with the usbsoftrock program
+which in turn communicates with the USB-based controller.
+
+If sdr-shell is configured to monitor the IF of another radio, it can
+communicate with the radio using hamblib to display the radio's frequency.
+It can also set it.  These options are on the IF Configuration tab.
+No better description is available; experiment with it.
+
+The largest granularity tuning is done using the arrow keys.  The left/right
+arrow keys tune up or down, with the step size selected by the up/down
+arrow keys.  There is a highlighted bar under the frequency display that
+indicates the step size. (This always sets the external oscillator).
+When using the usbsoftrock, this permits tuning anywhere that the SDR is
+capable of tuning.
+
+Positioning the mouse cursor over one of the numbers in the frequency display
+and using the scroll wheel, the SDR can be tuned by that granularity.  If it
+is 1khz, or less, tuning with the DttSP oscillator is done, and this will tune
+past the edge of the sound card by retuning usbsoftrock.  Clicking on one of
+the numbers sets the tuning step size for the mouse wheel and arrow keys to
+that value.
+
+By clicking one of the mouse buttons and dragging the cursor in the
+spectrogram window, tuning on a finger granularity of 1hz, 10hz or 100hz
+for the left, right and middle buttons, respectively.  However, this is
+limited to tuning only the dttsp "Oscillator".
+
+The mouse scroll wheel tunes by the step size underlined on the frequency
+display.
+
+By clicking in the spectrum window, sdr-shell tunes to center the frequency
+at the mouse pointer in the center of the filter.
+
+When usbsoftrock mode is selected, the dttsp Oscillator frequency is set to
+be half-way between DC and the upper end of the audio card's bandwidth.
+This keeps signals out of the muddy area near DC.  This value can be
+changed on the General Configuration tab.
+
+	Arbitrary DttSP commands
+
+With the huge number of features available in dttsp, it it a big job to
+create a GUI to operate on all of them.  Instead, 8 arbitrary commands are
+available.  These are labeled "C0" - "C8" along the bottom of the display.
+Each can hold two command strings: one to send to turn on and another to
+send to turn off.  If there is no off command, then only the on command
+is sent.  Left-click on the C# label to toggle, and bring up the configure
+window by right-clicking on any of the labels.
+
+Example:
+	Name:   NR2
+	On:     setSDROM 1
+	Off:    setSDROM 0
+	send to RX DttSP
+
+click Accept.  The C0 label will change to NR2 and further clicks on the label will
+send the setSDROM command.
+
+Multiple commands can be sent at once by separating the commands with a semicolon
+(resemblance to shell commands is purely cosmetic):
+
+	Name:   NR2
+	On:     setSDROM 1;setSDROMvals 2.5
+	Off:    setSDROM 0
+	send to RX DttSP
+
+the default SDROM threshold happens to be 2.5.
+
+
+     I set the dttsp transmit gain to about 15-18 to get maximum power
+out of my RXTX.
+
+     Configuration between runs is written to the file using the normal QT
+mechanisms.  The file is:
+	.config/freesoftware/sdr-shell.conf
+
+Keyboard Commands
+	t	toggle transmit on/off
+	space	turn transmit off
+U	set_filer_l -1
+I	set_filer_l +1
+O	set_filter_h -1
+P	set_filter_h +1
+[	filter[lh] -= step
+]	filter[lh] += step
+q	iqGain--
+w	iqGain++
+e	iqPhase--
+r	iqPhase++
+z	specAperatureLow--
+x	specAperatureLow++
+c	specAperatureHigh--
+v	specAperatureHigh++
+
+h	up arrow
+j	left arrow
+k	right arrow
+l	down arrow
+
+
+
+Miscellaneous
+
+
+Two Cards
+I have, as a test, used two audio cards on Linux with dttsp, by running two
+copies of jack:
+
+   default jackd instance:
+   /usr/bin/jackd -R -P55 -p128 -t2000 -dalsa -r48000 -D -Chw:2 -Phw:0 -s&
+   start the receive dttsp
+
+   second jackd instance:
+   export JACK_DEFAULT_SERVER=tx
+   /usr/bin/jackd -R -P55 -p128 -t2000 -dalsa -r48000 -D -Chw:0 -Phw:2 -s&
+   start the transmit dttsp
+
+
+I/Q Input on Speakers
+
+If your audio output is on the same audio card as the I/Q input, you'll likely
+hear some of the I/Q passed through.
+
+To mute line input:
+	amixer -c 0 controls
+look for
+	numid=18,iface=MIXER,name='Line Playback Switch'
+
+run:
+	amixer -c 0 cset numid=18 0
+
+To change the input source:
+
+	amixer controls
+
+look for Capture Source
+
+	amixer -c 0 cset numid=26 0     # set to mic
+	amixer -c 0 cset numid=26 4     # set to line
+
+I built the dttsp keyers with:
+	gcc -g -O2 -I . -c keyboard-keyer.c
+	gcc -g -O2 -I . -c iambic-keyer.c
+	gcc  -g -O2   -o keyboard-keyer keyboard-keyer.o  libDttSP.a -llo \
+		-lpthread -lm -ljack -lfftw3f
+	gcc  -g -O2   -o iambic-keyer iambic-keyer.o  libDttSP.a -llo \
+		-lpthread -lm -ljack -lfftw3f
+
+Glen Overby, kc0iyt  gpoverby@gmail.com  January, 2011
+
--- /dev/null
+++ sdr-shell-4.25~svn157/startup/start-delta44.sh
@@ -0,0 +1,72 @@
+#!/bin/sh
+
+# Start-Up for sdr-shell, dttsp, and usbsoftrock.  Oriented towards a Softrock
+# RXTX board.
+
+set -x
+export SDR_DEFRATE=96000
+
+/usr/bin/jackd -R -P66 -p128 -t2000 -dalsa -r96000 -D -Chw:2 -Phw:2 -s -p 2048&
+#pasuspender -- /usr/bin/jackd -R -P66 -p128 -t2000 -dalsa -r96000 -D -Chw:2 -Phw:2 -s -p 2048&
+JPID="$!"
+
+sleep 2
+
+#
+#  Start usbsoftrock.  Set your calibration valeu on the -x line.
+#  If you have it internally calibrated using advanced mode, put a '-a'
+#  here instead of the -x.
+#
+usbsoftrock ptt off
+#./usbsoftrock -vvvv -x 114.230181 -d &
+usbsoftrock -vvv -x 114.2630 -d &
+PIDS="$PIDS $!"
+
+export SDR_NAME=sdr
+sdr-core -s -m&
+PIDS="$PIDS $!"
+sleep 1
+jack_connect sdr:ol alsa_pcm:playback_1 
+jack_connect sdr:or alsa_pcm:playback_2
+jack_connect alsa_pcm:capture_1 sdr:il        
+jack_connect alsa_pcm:capture_2 sdr:ir     
+jack_lsp -c
+
+export SDR_NAME=sdr-tx
+export SDR_PARMPORT=19005
+export SDR_SPECPORT=19006
+export SDR_METERPORT=19007
+sdr-core -s -m -v &
+PIDS="$PIDS $!"
+sleep 1
+jack_lsp
+jack_connect sdr-tx:ol alsa_pcm:playback_3
+jack_connect sdr-tx:or alsa_pcm:playback_4
+case $1 in
+metronome )
+	jack_metro -b 60 &
+	PIDS="$PIDS $!"
+	sleep 1
+	jack_connect metro:60_bpm sdr-tx:il        
+	jack_connect metro:60_bpm sdr-tx:ir
+;;
+* )
+	jack_connect alsa_pcm:capture_3 sdr-tx:il
+	jack_connect alsa_pcm:capture_4 sdr-tx:ir
+;;
+esac
+
+echo $PIDS
+
+export SDR_MODE=$PWD/hook-mode
+#export SDR_BAND=$PWD/hook-band
+./sdr-shell
+
+# kill jack clients before killing jack himself.
+# this seems to be a cleaner shutdown than everything at once
+
+kill $PIDS
+sleep 2
+kill $JPID
+wait
+
--- /dev/null
+++ sdr-shell-4.25~svn157/startup/start-audigy.sh
@@ -0,0 +1,53 @@
+#!/bin/sh
+
+set -x
+SDR_DEFRATE=${SDR_DEFRATE-48000}
+export SDR_DEFRATE
+echo Rate: $SDR_DEFRATE
+
+export SDR_MODE=$PWD/hook_mode
+
+./usbsoftrock -vvv ptt off
+./usbsoftrock -vvv status
+#./usbsoftrock -vvv -x 114.230181 -d &		# SR6.2
+./usbsoftrock -vvv -x 114.2633 -d &		# SR6.3
+PIDS="$PIDS $!"
+
+#
+# Receive
+#
+export SDR_NAME=sdr
+#./sdr-core -v -s -m &
+./sdr-core -s -m &
+PIDS="$PIDS $!"
+sleep 1
+jack_lsp
+jack_connect sdr:ol system:playback_1 
+jack_connect sdr:or system:playback_2
+jack_connect system:capture_1 sdr:il        
+jack_connect system:capture_2 sdr:ir     
+jack_lsp -c
+
+#
+# Transmit
+#
+SDR_DEFRATE=${SDR_DEFRATE-48000}
+export SDR_DEFRATE
+export SDR_PARMPORT=19005
+export SDR_SPECPORT=19006
+export SDR_METERPORT=19007
+export SDR_NAME=sdr-tx
+./sdr-core -v -s -m &
+PIDS="$PIDS $!"
+sleep 1
+#jack_lsp
+jack_connect sdr-tx:ol system:playback_3
+jack_connect sdr-tx:or system:playback_4
+jack_connect system:capture_3 sdr-tx:il        
+jack_connect system:capture_4 sdr-tx:ir
+echo system:capture_3 system:capture_4 >.phinput
+echo $PIDS
+./sdr-shell
+kill $PIDS
+wait
+
--- /dev/null
+++ sdr-shell-4.25~svn157/startup/start_rx
@@ -0,0 +1,32 @@
+#!/bin/bash
+# define name used in the RMI registry
+NAME=SDR-SHELL
+export SDR_DEFRATE=48000
+export JACK_BUFFER=1024
+AUDIO_DEV=hw:0
+
+echo "starting jackd ..."
+/usr/bin/jackd -dalsa -d$AUDIO_DEV -r$SDR_DEFRATE -p${JACK_BUFFER} -n3&
+
+sleep 5
+
+# start RX DttSP
+echo "starting DttSP ${NAME}_RX ..."
+echo ports do not exist as argument
+exit
+sdr-core --spectrum --metering --client-name=${NAME}_RX --buffsize=${JACK_BUFFER} --ringmult=4 --command-port=19001 --spectrum-port=19002 --meter-port=19003&
+
+sleep 5
+# connect receiver
+echo "connecting receiver ..."
+jack_connect system:capture_1 ${NAME}_RX:il
+sleep 2
+jack_connect system:capture_2 ${NAME}_RX:ir
+sleep 2
+jack_connect ${NAME}_RX:ol system:playback_1
+sleep 2
+jack_connect ${NAME}_RX:or system:playback_2
+sleep 2
+
+# start sdr-shell
+./sdr-shell&
--- /dev/null
+++ sdr-shell-4.25~svn157/startup/start_fifi.sh
@@ -0,0 +1,91 @@
+#!/bin/sh
+clear
+set -x
+export SDR_DEFRATE=96000 #48000 
+#export SDR_DEFRATE=48000 
+DEV_CAPTURE=hw:4
+DEV_PLAYBACK=hw:0
+export SDR_NAME=sdr
+#export SDR_NAME=sdr-tx # double entry?
+
+## communication over ports
+export SDR_PARMPORT=19005 # sdr-core eats this
+export SDR_SPECPORT=19006  # sdr-core eats this
+export SDR_METERPORT=19007  # sdr-core eats this
+
+## FIFOs
+# if communication over fifos
+#export SDR_PARMPATH=/dev/shm/SDRcommands
+#export SDR_METERPATH=/dev/shm/SDRmeter
+#export SDR_SPECPATH=/dev/shm/SDRspectrum
+#for f in $SDR_PARMPATH $SDR_METERPATH $SDR_SPECPATH; do test -e $f || mkfifo $f; done;
+
+## Clean up
+killall -KILL sdr-core
+killall -KILL jackd
+
+## Start jackd
+echo "Starting jackd"
+/usr/bin/jackd -R -P66 -p128 -t2000 -dalsa -r$SDR_DEFRATE -D -C$DEV_CAPTURE -P$DEV_PLAYBACK -s -p 2048&
+# start in (R)ealtime with (P)rio 66, (p)ortmax 128, (t)imeout 2000 alsa with parameters...
+JPID="$!"
+sleep 5
+echo "Started jackd"
+
+## Realtime
+#rmmod capability
+#rmmod commoncap
+#modprobe realcap any=1 allcaps=1
+
+## Start DttSP
+echo "Starting DttSP"
+sdr-core --spectrum --metering&
+#sdr-core --spectrum --metering R} --ringmult=4 --command-port=19001 --spectrum-port=19002 --meter-port=19003
+PIDS="$PIDS $!"
+sleep 3
+echo "Started DttSP"
+
+# connect jack
+echo "Connecting jack"
+jack_connect $SDR_NAME:ol alsa_pcm:playback_1 || exit 1
+jack_connect $SDR_NAME:or alsa_pcm:playback_2 || exit 1
+jack_connect alsa_pcm:capture_1 $SDR_NAME:ir || exit 1       
+jack_connect alsa_pcm:capture_2 $SDR_NAME:il || exit 1    
+jack_lsp -c || exit 1
+PIDS="$PIDS $!"
+sleep 1
+echo "Connected jack"
+
+# Start si controller
+echo Starting si controller
+usbsoftrock -vvv -a -d &
+PIDS="$PIDS $!"
+sleep 5
+echo Starting si controller done
+
+echo "The following pids have been used: $PIDS"
+
+# Startx X
+#X :2 
+#export DISPLAY=:2
+
+# Start SDR shell
+echo "Starting SDR shell"
+#export SDR_MODE=$PWD/hook-mode
+#export SDR_BAND=$PWD/hook-band
+#sdr-shell
+sdr-shell --sample_rate=$SDR_DEFRATE --meter-port=$SDR_METERPORT \
+--spectrum-port=$SDR_SPECPORT --rx-command-port=$SDR_PARMPORT
+
+
+# kill jack clients before killing jack himself.
+# this seems to be a cleaner shutdown than everything at once
+
+kill $PIDS
+sleep 2
+kill $JPID
+wait
+
+
+killall sdr-core
+killall jackd
--- /dev/null
+++ sdr-shell-4.25~svn157/startup/start_softrock_lite.sh
@@ -0,0 +1,83 @@
+#!/bin/sh
+# Start-Up for sdr-shell, dttsp, and usbsoftrock.  Oriented towards a Softrock
+# RXTX board.
+clear
+# http://sdr-shell.googlecode.com/svn/tags/PMSDR-1.0/sdr-shell.sh
+set -x
+export SDR_DEFRATE=96000 #48000 
+#export SDR_DEFRATE=48000 
+DEV_CAPTURE=hw:4
+DEV_PLAYBACK=hw:0
+export SDR_NAME=sdr
+#export SDR_NAME=sdr-tx # double entry?
+
+## communication over ports
+#export SDR_PARMPORT=19005 # sdr-core eats this
+#export SDR_SPECPORT=19006  # sdr-core eats this
+#export SDR_METERPORT=19007  # sdr-core eats this
+
+## FIFOs
+# if communication over fifos
+export SDR_PARMPATH=/dev/shm/SDRcommands
+export SDR_METERPATH=/dev/shm/SDRmeter
+export SDR_SPECPATH=/dev/shm/SDRspectrum
+for f in $SDR_PARMPATH $SDR_METERPATH $SDR_SPECPATH; do test -e $f || mkfifo $f; done;
+
+## Clean up
+killall -KILL sdr-core
+killall -KILL jackd
+
+## Start jackd
+echo "Starting jackd"
+/usr/bin/jackd -R -P66 -p128 -t2000 -dalsa -r$SDR_DEFRATE -D -C$DEV_CAPTURE -P$DEV_PLAYBACK -s -p 2048&
+# start in (R)ealtime with (P)rio 66, (p)ortmax 128, (t)imeout 2000 alsa with parameters...
+JPID="$!"
+sleep 5
+echo "Started jackd"
+
+## Realtime
+#rmmod capability
+#rmmod commoncap
+#modprobe realcap any=1 allcaps=1
+
+## Start DttSP
+echo "Starting DttSP"
+sdr-core --spectrum --metering&
+#/usr/local/bin/sdr-core --spectrum --metering --client-name=${NAME}_RX --buffsize=${JACK_BUFFER} --ringmult=4 --command-port=19001 --spectrum-port=19002 --meter-port=19003
+PIDS="$PIDS $!"
+sleep 3
+echo "Started DttSP"
+
+# connect jack
+echo "Connecting jack"
+jack_connect $SDR_NAME:ol alsa_pcm:playback_1 || exit 1
+jack_connect $SDR_NAME:or alsa_pcm:playback_2 || exit 1
+jack_connect alsa_pcm:capture_1 $SDR_NAME:il || exit 1       
+jack_connect alsa_pcm:capture_2 $SDR_NAME:ir || exit 1    
+jack_lsp -c || exit 1
+PIDS="$PIDS $!"
+sleep 1
+echo "Connected jack"
+
+echo "The following pids have been used: $PIDS"
+
+# Start SDR shell
+echo "Starting SDR shell"
+#export SDR_MODE=$PWD/hook-mode
+#export SDR_BAND=$PWD/hook-band
+./sdr-shell
+#./sdr-shell --sample_rate=$SDR_DEFRATE --meter-port=$SDR_METERPORT \
+#--spectrum-port=$SDR_SPECPORT --rx-command-port=$SDR_PARMPORT
+
+
+# kill jack clients before killing jack himself.
+# this seems to be a cleaner shutdown than everything at once
+
+kill $PIDS
+sleep 2
+kill $JPID
+wait
+
+
+killall sdr-core
+killall jackd
--- /dev/null
+++ sdr-shell-4.25~svn157/startup/sdr-shell.sh
@@ -0,0 +1,309 @@
+#!/usr/bin/env bash
+#
+# sdr_shell.sh
+#
+# Synopsis: 	 The script starts jack, dttsp, connects the jack ports, starts sdr-shell
+#
+# Version:      $Revision$
+#
+# Author:	    Andrea Montefusco iw0hdv
+#               Excerpted from Edson Pereira startup script
+#
+# Usage:        ./sdr-shell.sh
+#
+
+function trapped {
+
+   JACKD_PID=`cat $VARRUN/sdr-core.pid`
+   DTTSP_PID=`cat $VARRUN/jackd.pid`
+   echo "Killing....... $JACKD_PID $DTTSP_PID"
+   kill  $JACKD_PID $DTTSP_PID 
+
+   rm -f $PMSDR_CMDPATH
+
+   killall socat
+   killall pmsdr
+
+   rm -f $SDR_PARMPATH
+   rm -f $SDR_METERPATH
+   rm -f $SDR_SPECPATH
+}
+
+trap "trapped" EXIT
+trap "trapped" INT
+trap "trapped" KILL
+
+
+
+#
+# Read the local configuration
+#
+. ./sdr-shell.conf
+
+
+#
+# Detect the sound card id from name
+#
+
+ALSAH_ID=$(aplay -l | grep "^card.*$ALSAH_NAME" | cut -f 1 -d: | cut -f 2 -d' ')
+
+if [ -z "$ALSAH_ID" ]; then
+   echo "Can't find soundcard $ALSAH_NAME"
+   echo "Check your config"
+   aplay -l
+   exit 1
+fi
+
+ALSAH="hw:$ALSAH_ID"
+
+echo "ALSA Sound card id: $ALSAH" 
+
+
+#
+# Sound Card Sampling Rate
+#
+if [ -z "$DEFRATE" ]; then
+   echo "Can't find DEFRATE definition."
+   exit 1
+fi
+
+export SDR_DEFRATE="$DEFRATE"
+
+
+JACKD_PARAM=" -dalsa -d$ALSAH -r$SDR_DEFRATE "
+
+##############################################################################
+
+VARRUN=/tmp/
+
+##############################################################################
+# Setup the DttSP Environment Variables
+
+# Path to DttSP command FIFO
+export SDR_PARMPATH=/dev/shm/SDRcommands
+
+# Path to DttSP meter FIFO
+export SDR_METERPATH=/dev/shm/SDRmeter
+
+# Path to DttSP spectrum FIFO
+export SDR_SPECPATH=/dev/shm/SDRspectrum
+
+
+##############################################################################
+# Setup the PMSDR environment variables
+export PMSDR_CMDPATH=/tmp/PMSDRcommands
+
+##############################################################################
+# Test if we have the needed executables and directories
+if [ ! -x $JACKD ]; then
+  echo "Can't find $JACKD executable."
+  exit 1
+fi
+
+if [ ! -d $DTTSP ]; then 
+  echo "Can't find directory $DTTSP"
+  exit 1
+fi
+
+DTTSP_EXEC=$DTTSP/sdr-core
+
+if [ ! -x $DTTSP_EXEC ]; then 
+  echo "Can't find $DTTSP_EXEC executable."
+  exit 1
+fi
+
+if [ ! -x $JACKC ]; then
+  echo "Can't find $JACKC"
+  exit 1
+fi
+
+# If we have RT capability, get the realtime module ready
+if [ $REALTIME ]; then
+  echo "Configuring realtime module"
+  JACKD="$JACKDRT -R"
+  rmmod capability
+  rmmod commoncap
+  modprobe realcap any=1 allcaps=1
+fi
+  
+
+##########################################################################
+# Create FIFOs if needed
+if [ ! -p $SDR_PARMPATH ]; then
+   mkfifo $SDR_PARMPATH
+fi
+
+if [ ! -p $SDR_METERPATH ]; then
+   mkfifo $SDR_METERPATH
+fi
+
+if [ ! -p $SDR_SPECPATH ]; then
+   mkfifo $SDR_SPECPATH
+fi
+
+if [ ! -p $PMSDR_CMDPATH ]; then
+   mkfifo $PMSDR_CMDPATH
+fi
+
+##########################################################################
+# Sanity check
+if [ ! -p $SDR_PARMPATH ]; then
+   echo "Error while creating $SDR_PARMPATH fifo"
+   exit 1
+fi
+
+if [ ! -p $SDR_METERPATH ]; then
+   echo "Error while creating $SDR_METERPATH fifo"
+   exit 1
+fi
+
+if [ ! -p $SDR_SPECPATH ]; then
+   echo "Error while creating $SDR_SPECPATH fifo"
+   exit 1
+fi
+
+if [ ! -p $PMSDR_CMDPATH ]; then
+   echo "Error while creating $PMSDR_CMDPATH fifo"
+   exit 1
+fi
+
+##########################################################################
+# Make sure jack and dttsp are not already running
+TMP=`ps -ef | grep jackd | grep -v grep | wc -l`
+if [ ! $TMP == 0 ]; then
+  echo "jackd is already running. Stopping..."
+  # exit 1
+fi
+
+TMP=`ps -ef | grep sdr-core | grep -v grep | wc -l`
+if [ ! $TMP == 0 ]; then
+  echo "sdr-core is already running. Stopping..."
+  exit 1
+fi
+
+##########################################################################
+# Start jackd
+echo ">>>> Starting jack: $JACKD $JACKD_PARAM $JACKD_CUSTOM_PARAM"
+
+$JACKD $JACKD_PARAM $JACKD_CUSTOM_PARAM &
+
+JACKD_PID=$!
+if [ $JACKD_PID ] 
+then
+  echo $JACKD_PID > $VARRUN/jackd.pid
+  echo "  Succeeded. JackD PID is $JACKD_PID"
+  echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
+else
+  echo "  Failed"
+  exit 1
+fi
+
+##########################################################################
+# 
+# wait for jackd startup 
+#
+sleep 2
+
+if [ $UDP_HELPER ] 
+then
+   ##########################################################################
+   # Start the helpers
+   #
+   socat -u -b 65536   UDP-LISTEN:19002   PIPE:$SDR_SPECPATH  &
+   socat -u            UDP-LISTEN:19003   PIPE:$SDR_METERPATH &
+fi
+
+
+##########################################################################
+# Start dttsp
+echo ">>>> Starting dttsp: $DTTSP_EXEC $DTTSP_PARAM..."
+cd $DTTSP
+$DTTSP_EXEC $DTTSP_PARAM &
+DTTSP_RC=$?
+DTTSP_PID=$!
+
+if [ $DTTSP_RC == 0 ] 
+then
+   echo "$DTTSP_RC"
+   if [ $DTTSP_PID ] 
+   then
+     echo $DTTSP_PID > $VARRUN/sdr-core.pid
+     echo "  Succeeded. DttSP PID is $DTTSP_PID"
+     echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
+   else
+     echo "  Failed to start $DTTSP_EXEC"
+     exit 1
+   fi
+else
+   echo "  Failed"
+   exit 1
+fi 
+
+
+
+##########################################################################
+# Start the PMSDR
+#
+echo "> Start the pmsdr.... $PMSDR"
+$PMSDR &
+PMSDR_PID=$!
+if [ $PMSDR_PID ] 
+then
+  echo $PMSDR_PID > $VARRUN/pmsdr.pid
+  echo "  Succeeded. pmsdr PID is $PMSDR_PID"
+else
+  echo "  Failed"
+fi
+
+##########################################################################
+# Make sure that pmsdr is running
+#
+TMP=`killall -CONT pmsdr ; echo $?`
+if [ $TMP != 0 ]; then
+   echo "pmsdr not running. Stopping..." | gmessage -center -timeout 5 -file -
+   exit 1
+fi
+
+
+##########################################################################
+# Start the Dttsp command helper
+#
+if [ $UDP_HELPER ] 
+then
+   #
+   # using socat for command pipe sometime may cause an error due to
+   # sdr-core command interpreter that requires each command to travel in 
+   # a single packet udp packet; starting from DttSP release #223 Frank ab2kt 
+   # has written a small utility to circumvent the problem.
+   #
+   #socat -u     PIPE:$SDR_PARMPATH UDP:localhost:19001,connect-timeout=10 &
+   #
+   $DTTSP/passport $SDR_PARMPATH &
+fi
+
+
+##########################################################################
+#
+# Connect Dttsp to jack ports
+#
+echo ">>>> Connecting dttsp to jack..."
+
+echo "  sdr-$DTTSP_PID:ol -> alsa_pcm:playback_1"
+$JACKC sdr-$DTTSP_PID:ol alsa_pcm:playback_1
+echo "  sdr-$DTTSP_PID:or -> alsa_pcm:playback_2"
+$JACKC sdr-$DTTSP_PID:or alsa_pcm:playback_2
+echo "  alsa_pcm:capture_1 -> sdr-$DTTSP_PID:il"
+$JACKC alsa_pcm:capture_1 sdr-$DTTSP_PID:il
+echo "  alsa_pcm:capture_2 -> sdr-$DTTSP_PID:ir"
+$JACKC alsa_pcm:capture_2 sdr-$DTTSP_PID:ir
+
+##########################################################################
+#
+# Start the real thing ....
+#
+$SDRSHELL
+
+SDRSHELL_RC=$?
+
+exit $SDRSHELL_RC
+
